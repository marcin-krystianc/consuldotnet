name: CI1

on:
  push:
  pull_request:

env:
  CONSUL_VERSION: 1.6.1

jobs:

  # Enforces the consistency of code formatting using `.editorconfig` and the `dotnet-format` tool.
  check-format:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.id != github.event.pull_request.base.repo.id
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.404
      - name: Restore tools
        run: dotnet tool restore
      - name: Check format
        run: dotnet format --check

  # Build and test on all major platforms.
  # Repack to avoid Newtonsoft.Json dependency in .NET Framework (This is to
  # prevent issues with mismatched JSON.NET versions in user projects).
  # Create a NuGet package on Windows only, as we build for .NET Framework 4.6.1
  # and for .NET Standard 2.0.
  build:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.id != github.event.pull_request.base.repo.id
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-10.15]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        if: runner.os != 'Windows'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.404
    
      # Workaround for https://github.com/actions/setup-dotnet/issues/155
      - name: Clear http-cache
        run: dotnet nuget list source && dotnet nuget locals http-cache --clear

      - name: Build
        run: dotnet build --configuration=Release -p:TreatWarningsAsErrors=true

      